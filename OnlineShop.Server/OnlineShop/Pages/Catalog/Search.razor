@page "/search"
@inject LoginState LoginState
@inject NavigationManager NavManager

<h1>Shop's Catalog</h1>
<EditForm Model="searchCatalog" class="pt-5">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-row align-items-lg-start">
        @if (searchByCategory)
        {
            <div class="col-3">
                <label class="sr-only" for="category">Category:</label>
                <InputText type="text" class="form-control" id="category" placeholder="Enter Category" @bind-Value="searchCatalog.Value" />
            </div>
        }
        else
        {
            <div class="col-3">
                <label class="sr-only" for="email">Seller Email:</label>
                <InputText type="text" class="form-control" id="email" placeholder="Enter Email" @bind-Value="searchCatalog.Value" />
            </div>
        }

        <div class="col-3">
            <label class="sr-only" for="searchBy">Search By:</label>
            <InputSelect id="searchBy" class="form-control" @bind-Value="searchCatalog.SearchBy" required>
                <option value="category">Category</option>
                <option value="email">Seller Email</option>
            </InputSelect>
        </div>

        <div class="col-auto">
            <button type="submit" class="btn btn-primary">Search</button>
        </div>
    </div>
</EditForm><br /><br/>


<table class="table table-striped table-bordered pt-4">
    <thead>
        <tr>
            <th>Item</th>
            <th>Quantity in Stock</th>
            <th>Sold By</th>
            <th>Sold By Email</th>
            <th></th>
        </tr>
    </thead>
    <tbody>

    </tbody>
</table> 

@code {
    private SearchCatalog searchCatalog = new SearchCatalog();
    private bool searchByCategory = true;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        if (!LoginState.LoggedIn)
        {
            NavManager.NavigateTo("/login");
        }
    }
}
