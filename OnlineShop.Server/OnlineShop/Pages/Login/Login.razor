@page "/login"
@using Models
@inject IUserGrpcService UserGrpcService;

@if (showBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}

<div class="modal @modalClass" tabindex="-1" role="dialog" style="display:@modalDisplay;">
    <div class="modal-dialog-centered modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <div class="spinner-grow text-dark" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
                <div class="spinner-grow text-dark" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
                <div class="spinner-grow text-dark" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
                <div class="spinner-grow text-dark" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
                <div class="spinner-grow text-dark" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
                <div class="spinner-grow text-dark" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
                <div class="spinner-grow text-dark" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
            </div>

        </div>
    </div>
</div>
<div class="container">

    <div class="row py-5">
        <div class="col-3"></div>
        <div class="col-5">
            @if (!isSignUp)
            {
                <div class="card">
                    <h4 class="card-header bg-light">Login</h4>

                    <div class="card-body">
                        <EditForm Model="@loginRequest">
                            <DataAnnotationsValidator />
                            <ValidationSummary />
                            @if (!string.IsNullOrEmpty(loginMessage))
                            {
                                <div class="alert alert-danger">
                                    @loginMessage
                                </div>
                            }
                            <div class="form-group">
                                <label for="email">Email Address:</label>
                                <InputText id="email" name="email" @bind-Value="loginRequest.Email" class="form-control" placeholder="Email Address" />
                            </div>
                            <div class="form-group">
                                <label for="password">Password:</label>
                                <InputText type="password" id="password" name="password" @bind-Value="loginRequest.Password" class="form-control" placeholder="Password" />
                                <div class="mt-2">
                                    <a class="card-link" href="" @onclick="SwitchToSignup" @onclick:preventDefault>Dont' have account? Sign Up!</a><br />
                                    <a class="card-link" href="">Forget Password</a>
                                </div>
                            </div>

                            <button type="submit" class="btn btn-primary" disabled="@(!context.Validate())">Login</button>
                        </EditForm>
                    </div>

                </div>
            }
            else
            {
                <div class="card">
                    <h4 class="card-header bg-light">Login</h4>

                    <div class="card-body">
                        <EditForm Model="@signupRequest" OnValidSubmit="SignUp">
                            <DataAnnotationsValidator />
                            <ValidationSummary />
                            @if (!string.IsNullOrEmpty(signupMessage))
                            {
                                @if (signUpSuccess)
                                {
                                    <div class="alert alert-success">
                                        <p>@signupMessage</p>
                                        <p>Click <a href="" @onclick="SwitchToLogin" @onclick:preventDefault>here</a> to return to login page.</p>
                                    </div>
                                }
                                else
                                {
                                    <div class="alert alert-danger">
                                        @signupMessage
                                    </div>
                                }
                            }

                            <div class="form-group">
                                <label for="name">Name:</label>
                                <InputText id="name" name="name" @bind-Value="signupRequest.Name" class="form-control" placeholder="Name" />
                            </div>
                            <div class="form-group">
                                <label for="email">Email Address:</label>
                                <InputText id="email" name="email" @bind-Value="signupRequest.Email" class="form-control" placeholder="Email Address" />
                            </div>
                            <div class="form-group">
                                <label for="password">Password:</label>
                                <InputText type="password" id="password" name="password" @bind-Value="signupRequest.Password" class="form-control" placeholder="Password" />
                            </div>
                            <div class="form-group">
                                <label for="confirmPassword">Confirm Password:</label>
                                <InputText type="password" id="confirmPassword" name="confirmPassword" @bind-Value="signupRequest.ConfirmPassword" class="form-control" placeholder="Confirm Password" />
                            </div>
                            <button type="submit" class="btn btn-primary" disabled="@(!context.Validate())">Sign Up</button>
                            <button type="button" class="btn btn-danger" @onclick="SwitchToLogin">Cancel</button>
                        </EditForm>
                    </div>
                </div>
            }


        </div>
        <div class="col-4"></div>
    </div>
</div>


@code {
    private LoginRequest loginRequest = new LoginRequest();
    private SignupRequest signupRequest = new SignupRequest();

    private bool isSignUp = false;
    private bool signUpSuccess = false;
    private string signupMessage = null;

    private string loginMessage = null;

    private string modalDisplay = "none;";
    private string modalClass = "";
    private bool showBackdrop = false;


    private void SwitchToSignup()
    {
        isSignUp = true;
        loginMessage = null;
    }

    private void SwitchToLogin()
    {
        isSignUp = false;
        signupMessage = null;
        signUpSuccess = false;

        signupRequest = new SignupRequest();
    }

    private void OpenModal()
    {
        modalDisplay = "block;";
        modalClass = "show";
        showBackdrop = true;
    }

    private void CloseModal()
    {
        modalDisplay = "none;";
        modalClass = "";
        showBackdrop = false;
    }

    private async Task SignUp()
    {
        try
        {
            OpenModal();

            signupMessage = null;
            signUpSuccess = false;

            if (signupRequest.Password != signupRequest.ConfirmPassword)
            {
                signUpSuccess = false;
                signupMessage = "Passwords do not match";
                CloseModal();

                return;
            }

            await UserGrpcService.CreateUser(signupRequest);

            CloseModal();

            signupMessage = "Successfully created account.";
            signUpSuccess = true;

            signupRequest = new SignupRequest();
        }
        catch(RpcException rpcEx)
        {
            signUpSuccess = false;
            signupMessage = rpcEx.Status.Detail;

            CloseModal();
        }
        catch (Exception ex)
        {
            signUpSuccess = false;
            signupMessage = ex.Message;

            CloseModal();
        }
    }
}
